name: Docker Image CI

on:
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write

    steps:
    # Step 1: Checkout repository code
    - name: Checkout repository
      uses: actions/checkout@v4

    # Step 2: Extract version from config.py
    - name: Get version from ADDON_MANIFEST
      id: get-version
      run: |
        VERSION=$(grep '"version":' wastream/core/config.py | sed -n 's/.*"version": "\([^"]*\)".*/\1/p')
        echo "Extracted version: $VERSION"
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

    # Step 3: Extract Docker metadata (tags and labels)
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          dyhlio/wastream
          ghcr.io/${{ github.repository }}
        tags: |
          type=raw,value=${{ steps.get-version.outputs.VERSION }},enable={{is_default_branch}}
          type=raw,value=latest,enable={{is_default_branch}}

    # Step 4: Setup QEMU for multi-platform builds
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    # Step 5: Setup Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Step 6: Login to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # Step 7: Login to GitHub Container Registry
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # Step 8: Build and push Docker image (amd64, arm64)
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
